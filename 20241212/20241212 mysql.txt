[MySQL]

<<테이블 만들기>>
>>
UTP -8 로 바꿔주기 
C:\Users\80418>chcp
활성 코드 페이지: 949
C:\Users\80418>65001
>> create database test _db; 
>> show databases;  - 데이터가 먼저 있는지 확인.
>> use test_db;
>> show tables;  -테이블 확인
>> desc 테이블 이름 (professor);  - professor 안에 테이블 구조 확인 
>> drop table (테이블이름) --테이블 삭제 
>> select * from professor;  --professor 안에 있는거 확인.
>> selcet (belon,phone 등 보고싶은것 //여러개 가능) from (테이블이름) ;
     ex) mysql> select phone from student; 


<<문제 1. professor>>
================================================================
table name : professor
자동증가
p_id       name    belong             phone
        1  유재석   COMPUTER   010-1234-5678
        2  황영조   SPORTS       010-2134-2443
        3  케이멀   DANCE        010-2342-4343
        4  호날두   ENGLISH      010-3434-3222
        5  김형민   COMPUTER   010-2343-2432

create table professor(
p_id int primary key auto_increment,
name varchar(20) not null,
belong varchar(20),
phone varchar(20) );
------------------------------------------------------------

insert into professor (name, belong, phone)
values('유재석','COMPUTER','010-1234-5678')
insert into professor (name, belong, phone)
values('황영조','SPORTS','010-2134-2443')
insert into professor (name, belong, phone)
values('케이멀','DANCE','010-2342-4343')
insert into professor (name, belong, phone)
values('호날두','ENGLISH','010-3434-3222')
insert into professor (name, belong, phone)
values('김형민','COMPUTER','010-2343-2432') 
            
↓

**더 간단하게 집어넣는 방법 ** 

insert into professor (name, belong, phone)
values('유재석','COMPUTER','010-1234-5678'),
('황영조','SPORTS','010-2134-2443'),
('케이멀','DANCE','010-2342-4343'),
('호날두','ENGLISH','010-3434-3222'),
('김형민','COMPUTER','010-2343-2432');


==> 결과 확인 <==
mysql> select * from professor;
+------+-----------+----------+---------------+
| p_id | name      | belong   | phone         |
+------+-----------+----------+---------------+
|    1 | 유재석    | COMPUTER | 010-1234-5678 |    <레코드>
|    2 | 황영조    | SPORTS   | 010-2134-2443 |
|    3 | 케이멀    | DANCE    | 010-2342-4343 |
|    4 | 호날두    | ENGLISH  | 010-3434-3222 |
|    5 | 김형민    | COMPUTER | 010-2343-2432 |
+------+-----------+----------+---------------+

<필드>

5 rows in set (0.00 sec)


================================================================


<<문제 2. student r>>

DROP TABLE if exists STUDENT;

CREATE TABLE student
(
     s_id CHAR(9),
     name VARCHAR(48) NOT NULL,
     belong VARCHAR(20),
     phone VARCHAR(20),
     status INT DEFAULT 0,
     primary key (s_id)
	
);

INSERT INTO student VALUES('20090101', '루피', 'COMPUTER', '01012345678', 1);
INSERT INTO student VALUES('20100102', '조로', 'MUSIC', '01023435343', 2);
INSERT INTO student VALUES('20110103', '상디', 'SPORTS', '01021342443', 1);
INSERT INTO student VALUES('20100204', '버기', 'DANCE', '01023424343', 2);
INSERT INTO student VALUES('20110106', '프랑키', 'ENGLISH', '01034343222' , 1);
INSERT INTO student VALUES('20080104', '나미', 'COMPUTER', '01023432432', 3);
INSERT INTO student VALUES('20090105', '쵸파', 'MUSIC', '01012342433', 3);
INSERT INTO student VALUES('20090301', '에릭', 'DANCE', '01032424244', 2);
INSERT INTO student VALUES('20090302', '전진', 'COMPUTER', '01012321313', 3);
INSERT INTO student VALUES('20100505', '오공', 'MUSIC', '01023534644', 2);
INSERT INTO student VALUES('20110506', '오천', 'SPORTS', '01021334525', 1);
INSERT INTO student VALUES('20100507', '베지터', 'DANCE', '01023423623', 2);
INSERT INTO student VALUES('20110502', '부우', 'ENGLISH', '01034332634', 1);
INSERT INTO student VALUES('20080501', '크리링', 'COMPUTER', '01023436346', 2);
INSERT INTO student VALUES('20090503', '피콜로', 'MUSIC', '01013634645', 3);
INSERT INTO student VALUES('20090509', '셀', 'DANCE', '01032427535', 3);

== > 따로 저장 db폴더 안에 
mysql> source C:\$_HYOJIN\db\student_schema.sql
Query OK, 0 rows affected, 1 warning (0.00 sec)

Query OK, 0 rows affected (0.03 sec)

mysql> source C:\$_HYOJIN\db\student_data.sql
Query OK, 16 rows affected (0.01 sec)
Records: 16  Duplicates: 0  Warnings: 0


==> 결과 확인 <==
mysql> show tables;
+-------------------+
| Tables_in_test_db |
+-------------------+
| professor         |
| sample            |
| student           |
+-------------------+
3 rows in set (0.00 sec)

mysql> select * from student;
+----------+-----------+----------+-------------+--------+
| s_id     | name      | belong   | phone       | status |
+----------+-----------+----------+-------------+--------+
| 20080104 | 나미      | COMPUTER | 01023432432 |      3 |
| 20080501 | 크리링    | COMPUTER | 01023436346 |      2 |
| 20090101 | 루피      | COMPUTER | 01012345678 |      1 |
| 20090105 | 쵸파      | MUSIC    | 01012342433 |      3 |
| 20090301 | 에릭      | DANCE    | 01032424244 |      2 |
| 20090302 | 전진      | COMPUTER | 01012321313 |      3 |
| 20090503 | 피콜로    | MUSIC    | 01013634645 |      3 |
| 20090509 | 셀        | DANCE    | 01032427535 |      3 |
| 20100102 | 조로      | MUSIC    | 01023435343 |      2 |
| 20100204 | 버기      | DANCE    | 01023424343 |      2 |
| 20100505 | 오공      | MUSIC    | 01023534644 |      2 |
| 20100507 | 베지터    | DANCE    | 01023423623 |      2 |
| 20110103 | 상디      | SPORTS   | 01021342443 |      1 |
| 20110106 | 프랑키    | ENGLISH  | 01034343222 |      1 |
| 20110502 | 부우      | ENGLISH  | 01034332634 |      1 |
| 20110506 | 오천      | SPORTS   | 01021334525 |      1 |
+----------+-----------+----------+-------------+--------+
16 rows in set (0.00 sec)

================================================================

<<정렬>>
select * from  테이블이름;
select name, phone, from 테이블
    조건  where 1. 필드명 = ' O ' And,Or  필드명 =123
                    2. num >= 1 Or num <=10
                    3. num between 1 And 10
                    4. belong in ('computer', 'dance')
                    5. belong like '%찾는문자 %'  c로 시작하는 단어 다 찾고싶으면 c%  
            Order By name  asc   - 오름차순 
                                desc  - 내림차순
=================================================================

mysql> select 1+2; 
mysql> select 7 mod 3;  // mod 나머지 확인
mysql> select 3 mod 7 as 나머지 ;    // as로 쓴거를 필드명으로 ?
+-----------+
| 나머지    |
+-----------+
|         3 |
+-----------+
1 row in set (0.00 sec)

ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

mysql> select name from student order by name asc; => 네임을 오름차순으로 정렬 

ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

mysql> select name, belong from student --- student 안에 name과 belong 보여주기
    -> order by belong asc;       ---belong 오름차순으로  

// asc , desc 생략하면 기본 오름차순                

==> 결과 확인 <== 
+-----------+----------+
| name      | belong   |
+-----------+----------+
| 나미      | COMPUTER |
| 크리링    | COMPUTER |
| 루피      | COMPUTER |
| 전진      | COMPUTER |
| 에릭      | DANCE    |
| 셀        | DANCE    |
| 버기      | DANCE    |
| 베지터    | DANCE    |
| 프랑키    | ENGLISH  |
| 부우      | ENGLISH  |
| 쵸파      | MUSIC    |
| 피콜로    | MUSIC    |
| 조로      | MUSIC    |
| 오공      | MUSIC    |
| 상디      | SPORTS   |
| 오천      | SPORTS   |
+-----------+----------+

16 rows in set (0.00 sec)
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

mysql> select name, belong from student ---student 안에 name과 belong 보여주기
    -> order by belong asc, name desc;     ---belong 오름차순으로  name 내림차순으로 정렬하여 보여주기
 
==> 결과 확인 <== 

+-----------+----------+
| name      | belong   |
+-----------+----------+
| 크리링    | COMPUTER |
| 전진      | COMPUTER |
| 루피      | COMPUTER |
| 나미      | COMPUTER |
| 에릭      | DANCE    |
| 셀        | DANCE    |
| 베지터    | DANCE    |
| 버기      | DANCE    |
| 프랑키    | ENGLISH  |
| 부우      | ENGLISH  |
| 피콜로    | MUSIC    |
| 쵸파      | MUSIC    |
| 조로      | MUSIC    |
| 오공      | MUSIC    |
| 오천      | SPORTS   |
| 상디      | SPORTS   |
+-----------+----------+
1
6 rows in set (0.00 sec)
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

mysql> select distinct belong from student;    //  distinct 중복된거 하나만 보이게 하기 
+----------+
| belong   |
+----------+
| COMPUTER |
| MUSIC    |
| DANCE    |
| SPORTS   |
| ENGLISH  |
+----------+
5 rows in set (0.00 sec)

ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
mysql> select name, phone from student
    -> order by name asc
    -> limit 5;                                //limit -내가 검색한것중 몇개가지고 올지 
+-----------+-------------+
| name      | phone       |
+-----------+-------------+
| 나미      | 01023432432 |
| 루피      | 01012345678 |
| 버기      | 01023424343 |
| 베지터    | 01023423623 |
| 부우      | 01034332634 |
+-----------+-------------+
5 rows in set (0.00 sec)

ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
mysql> select *from professor;
+------+-----------+----------+---------------+
| p_id | name      | belong   | phone         |
+------+-----------+----------+---------------+
|    1 | 유재석    | COMPUTER | 010-1234-5678 |
|    2 | 황영조    | SPORTS   | 010-2134-2443 |
|    3 | 케이멀    | DANCE    | 010-2342-4343 |
|    4 | 호날두    | ENGLISH  | 010-3434-3222 |
|    5 | 김형민    | COMPUTER | 010-2343-2432 |
+------+-----------+----------+---------------+
5 rows in set (0.00 sec)

mysql> select *from professor limit 1;
+------+-----------+----------+---------------+
| p_id | name      | belong   | phone         |
+------+-----------+----------+---------------+
|    1 | 유재석    | COMPUTER | 010-1234-5678 |
+------+-----------+----------+---------------+
1 row in set (0.00 sec)

====5개중 1개만 가지고 올때

ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

mysql> select * from student
    -> where belong = 'dance' ;
+----------+-----------+--------+-------------+--------+
| s_id     | name      | belong | phone       | status |
+----------+-----------+--------+-------------+--------+
| 20090301 | 에릭      | DANCE  | 01032424244 |      2 |
| 20090509 | 셀        | DANCE  | 01032427535 |      3 |
| 20100204 | 버기      | DANCE  | 01023424343 |      2 |
| 20100507 | 베지터    | DANCE  | 01023423623 |      2 |
+----------+-----------+--------+-------------+--------+
4 rows in set (0.00 sec)


ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
mysql> select * from student
    -> where belong = 'dance' or belong = 'sports';
+----------+-----------+--------+-------------+--------+
| s_id     | name      | belong | phone       | status |
+----------+-----------+--------+-------------+--------+
| 20090301 | 에릭      | DANCE  | 01032424244 |      2 |
| 20090509 | 셀        | DANCE  | 01032427535 |      3 |
| 20100204 | 버기      | DANCE  | 01023424343 |      2 |
| 20100507 | 베지터    | DANCE  | 01023423623 |      2 |
| 20110103 | 상디      | SPORTS | 01021342443 |      1 |
| 20110506 | 오천      | SPORTS | 01021334525 |      1 |
+----------+-----------+--------+-------------+--------+
6 rows in set (0.00 sec)


ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ


mysql> select *from student
    -> where belong = 'computer'
    -> order by name desc;
+----------+-----------+----------+-------------+--------+
| s_id     | name      | belong   | phone       | status |
+----------+-----------+----------+-------------+--------+
| 20080501 | 크리링    | COMPUTER | 01023436346 |      2 |
| 20090302 | 전진      | COMPUTER | 01012321313 |      3 |
| 20090101 | 루피      | COMPUTER | 01012345678 |      1 |
| 20080104 | 나미      | COMPUTER | 01023432432 |      3 |
+----------+-----------+----------+-------------+--------+
4 rows in set (0.00 sec)

ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

mysql> select * from student
    -> where status >=2 and status <=3;
+----------+-----------+----------+-------------+--------+
| s_id     | name      | belong   | phone       | status |
+----------+-----------+----------+-------------+--------+
| 20080104 | 나미      | COMPUTER | 01023432432 |      3 |
| 20080501 | 크리링    | COMPUTER | 01023436346 |      2 |
| 20090105 | 쵸파      | MUSIC    | 01012342433 |      3 |
| 20090301 | 에릭      | DANCE    | 01032424244 |      2 |
| 20090302 | 전진      | COMPUTER | 01012321313 |      3 |
| 20090503 | 피콜로    | MUSIC    | 01013634645 |      3 |
| 20090509 | 셀        | DANCE    | 01032427535 |      3 |
| 20100102 | 조로      | MUSIC    | 01023435343 |      2 |
| 20100204 | 버기      | DANCE    | 01023424343 |      2 |
| 20100505 | 오공      | MUSIC    | 01023534644 |      2 |
| 20100507 | 베지터    | DANCE    | 01023423623 |      2 |
+----------+-----------+----------+-------------+--------+
11 rows in set (0.00 sec)

ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

mysql> select * from student
    -> where s_id < '201000000';
+----------+-----------+----------+-------------+--------+
| s_id     | name      | belong   | phone       | status |
+----------+-----------+----------+-------------+--------+
| 20080104 | 나미      | COMPUTER | 01023432432 |      3 |
| 20080501 | 크리링    | COMPUTER | 01023436346 |      2 |
| 20090101 | 루피      | COMPUTER | 01012345678 |      1 |
| 20090105 | 쵸파      | MUSIC    | 01012342433 |      3 |
| 20090301 | 에릭      | DANCE    | 01032424244 |      2 |
| 20090302 | 전진      | COMPUTER | 01012321313 |      3 |
| 20090503 | 피콜로    | MUSIC    | 01013634645 |      3 |
| 20090509 | 셀        | DANCE    | 01032427535 |      3 |
+----------+-----------+----------+-------------+--------+
8 rows in set (0.00 sec)
 
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ


**더 간단하게 찾는 방법**

필드명 like ''

% : 공백을 포함한 모든 것들
_  : 무조건 갯수만큼 문자 필요 


mysql> select * from student
    -> where s_id like '2008%';
+----------+-----------+----------+-------------+--------+
| s_id     | name      | belong   | phone       | status |
+----------+-----------+----------+-------------+--------+
| 20080104 | 나미      | COMPUTER | 01023432432 |      3 |
| 20080501 | 크리링    | COMPUTER | 01023436346 |      2 |
+----------+-----------+----------+-------------+--------+
2 rows in set (0.00 sec)



mysql> select *from student
    -> where belong like '%pu%';
+----------+-----------+----------+-------------+--------+
| s_id     | name      | belong   | phone       | status |
+----------+-----------+----------+-------------+--------+
| 20080104 | 나미      | COMPUTER | 01023432432 |      3 |
| 20080501 | 크리링    | COMPUTER | 01023436346 |      2 |
| 20090101 | 루피      | COMPUTER | 01012345678 |      1 |
| 20090302 | 전진      | COMPUTER | 01012321313 |      3 |
+----------+-----------+----------+-------------+--------+
4 rows in set (0.00 sec)

 

//이름이 '피' 들어간 사람 찾기 

mysql> select *from student
    -> where name like '%피%';
+----------+-----------+----------+-------------+--------+
| s_id     | name      | belong   | phone       | status |
+----------+-----------+----------+-------------+--------+
| 20090101 | 루피      | COMPUTER | 01012345678 |      1 |
| 20090503 | 피콜로    | MUSIC    | 01013634645 |      3 |
+----------+-----------+----------+-------------+--------+
2 rows in set (0.00 sec)

ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ


<<문제>>
2011로 시작하는 학생의
아이디, 이름, 소속을 출력합니다.
(단, 소속별로 오름차순, 같은소속이면 이름의 내림차순으로 정렬)

mysql> select s_id, name , belong from student
    -> where s_id like '2011%'
    -> order by belong asc, name desc;
+----------+-----------+---------+
| s_id     | name      | belong  |
+----------+-----------+---------+
| 20110106 | 프랑키    | ENGLISH |
| 20110502 | 부우      | ENGLISH |
| 20110506 | 오천      | SPORTS  |
| 20110103 | 상디      | SPORTS  |
+----------+-----------+---------+
4 rows in set (0.00 sec)

ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

<<문제>>
소속이 컴퓨터가 아닌 학생의 이름과 소속을 출력 

방법 1.
mysql> select name, belong from student
    -> where belong <> 'computer';    // <> = 같지 않다.
+-----------+---------+
| name      | belong  |
+-----------+---------+
| 쵸파      | MUSIC   |
| 에릭      | DANCE   |
| 피콜로    | MUSIC   |
| 셀        | DANCE   |
| 조로      | MUSIC   |
| 버기      | DANCE   |
| 오공      | MUSIC   |
| 베지터    | DANCE   |
| 상디      | SPORTS  |
| 프랑키    | ENGLISH |
| 부우      | ENGLISH |
| 오천      | SPORTS  |
+-----------+---------+
12 rows in set (0.00 sec)

방법 2. 
mysql> select name, belong from student
    -> where belong not like 'com%';
+-----------+---------+
| name      | belong  |
+-----------+---------+
| 쵸파      | MUSIC   |
| 에릭      | DANCE   |
| 피콜로    | MUSIC   |
| 셀        | DANCE   |
| 조로      | MUSIC   |
| 버기      | DANCE   |
| 오공      | MUSIC   |
| 베지터    | DANCE   |
| 상디      | SPORTS  |
| 프랑키    | ENGLISH |
| 부우      | ENGLISH |
| 오천      | SPORTS  |
+-----------+---------+
12 rows in set (0.00 sec)

방법 3.
mysql> select name, belong from student
    -> where not belong = 'computer';
+-----------+---------+
| name      | belong  |
+-----------+---------+
| 쵸파      | MUSIC   |
| 에릭      | DANCE   |
| 피콜로    | MUSIC   |
| 셀        | DANCE   |
| 조로      | MUSIC   |
| 버기      | DANCE   |
| 오공      | MUSIC   |
| 베지터    | DANCE   |
| 상디      | SPORTS  |
| 프랑키    | ENGLISH |
| 부우      | ENGLISH |
| 오천      | SPORTS  |
+-----------+---------+
12 rows in set (0.00 sec)
=================================================================