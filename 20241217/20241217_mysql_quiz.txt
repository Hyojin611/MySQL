1. professor table에서 p_id가 3 이상인 자료의 이름과 전화번호를 
   출력하고, 이름에 대해서 내림차순으로 정렬합니다.
==> 
select name, phone from professor
where p_id >=3
order by name desc;

==>
mysql> select p_id, name, phone from professor
    -> where p_id >=3
    -> order by name desc;
+------+--------+---------------+
| p_id | name   | phone         |
+------+--------+---------------+
|    4 | 호날두 | 010-3434-3222 |
|    3 | 케이멀 | 010-2342-4343 |
|    5 | 김형민 | 010-2343-2432 |
+------+--------+---------------+
3 rows in set (0.00 sec)
    
=========================================================
2. student table에서 belong 이 COMPUTER 인 자료의 아이디, 이름, 소속
을 출력하세요.

==>
mysql> select s_id, name, belong from student
    -> where belong = 'computer';
+----------+--------+----------+--------+
| s_id     | name   | belong   | status |
+----------+--------+----------+--------+
| 20080104 | 나미   | COMPUTER |      3 |
| 20080501 | 크리링 | COMPUTER |      2 |
| 20090101 | 루피   | COMPUTER |      1 |
| 20090302 | 전진   | COMPUTER |      3 |
+----------+--------+----------+--------+
4 rows in set (0.00 sec)

=========================================================
3. student table에서 belong 이 'dance' 또는 'music' 또는 'sports' 인 자료의 
           아이디, 이름, 소속을 출력하세요.

mysql> select s_id, name, belong, status from student
    -> where belong in ('dance','music','sports');
+----------+--------+--------+--------+
| s_id     | name   | belong | status |
+----------+--------+--------+--------+
| 20090105 | 쵸파   | MUSIC  |      3 |
| 20090301 | 에릭   | DANCE  |      2 |
| 20090503 | 피콜로 | MUSIC  |      3 |
| 20090509 | 셀     | DANCE  |      3 |
| 20100102 | 조로   | DANCE  |      2 |
| 20100204 | 버기   | DANCE  |      2 |
| 20100507 | 베지터 | DANCE  |      2 |
| 20110103 | 상디   | SPORTS |      1 |
| 20110506 | 오천   | SPORTS |      1 |
+----------+--------+--------+--------+
9 rows in set (0.00 sec)

=========================================================
4. student 테이블에서 id가 010을 포함하는 자료들의 id와 이름
select s_id,name from student
where s_id like '%010%';

mysql> select s_id,name from student
    -> where s_id like '%010%';
+----------+--------+
| s_id     | name   |
+----------+--------+
| 20080104 | 나미   |
| 20090101 | 루피   |
| 20090105 | 쵸파   |
| 20100102 | 조로   |
| 20100204 | 버기   |
| 20100505 | 오공   |
| 20100507 | 베지터 |
| 20110103 | 상디   |
| 20110106 | 프랑키 |
+----------+--------+
9 rows in set (0.00 sec)

=========================================================
5. student 테이블에서 name이 세자인 자료


select name from student
where name like '___';


mysql> select name from student
    -> where name like '___';
+--------+
| name   |
+--------+
| 크리링 |
| 피콜로 |
| 베지터 |
| 프랑키 |
+--------+
4 rows in set (0.00 sec)
=========================================================
6. 학생테이블에서 id가 2009가 포함되지 않은 자료...


select *from student
where s_id not like '%2009%';


mysql> select *from student
    -> where s_id not like '%2009%';
+----------+--------+----------+---------------+--------+
| s_id     | name   | belong   | phone         | status |
+----------+--------+----------+---------------+--------+
| 20080104 | 장원영 | COMPUTER | 01023432432   |      3 |
| 20080501 | 크리링 | COMPUTER | 01023436346   |      2 |
| 20100102 | 조로   | DANCE    | 01023435343   |      2 |
| 20100204 | 버기   | DANCE    | 01023424343   |      2 |
| 20100505 | 오공   | Golf     | 119           |      2 |
| 20100507 | 베지터 | DANCE    | 01023423623   |      2 |
| 20110103 | 상디   | SPORTS   | 01021342443   |      1 |
| 20110106 | 프랑키 | ENGLISH  | 01034343222   |      1 |
| 20110502 | 부우   | DANCE    | 010-7777-7777 |      1 |
| 20110506 | 오천   | SPORTS   | 01021334525   |      1 |
+----------+--------+-------


=========================================================
7. 학생테이블에서 belong이 music 또는 computer 또는 english 인 자료 중
   id에 2011을 포함하는 자료를 status에 대해 내림차순으로 정렬해 주세요
   (출력은 id, 이름, 소속, 전화번호, 교수_ID 로 column이름이 나타나도록
    합니다.)

mysql> select s_id,name as 이름 ,belong as 소속, phone as 전화번호, status as 교수_ID from student
    -> where s_id like '%2011%' and belong in ('music','computer','english')
    -> order by status desc;
+----------+--------+---------+-------------+---------+
| s_id     | 이름   | 소속    | 전화번호    | 교수_ID |
+----------+--------+---------+-------------+---------+
| 20110106 | 프랑키 | ENGLISH | 01034343222 |       1 |
| 20110502 | 부우   | ENGLISH | 01034332634 |       1 |
+----------+--------+---------+-------------+---------+
2 rows in set (0.00 sec)

=========================================================
8. 학생테이블에서 이름 '전진'을 삭제합니다.


delete from student where name = '전진';


=========================================================
9. 아래의 자료를 학생테이블에 입력합니다.
20090302   
전진
COMPUTER
01012321313  
3
==============

insert into student (s_id,name,belong,phone,status)
values('20090302','전진','COMPUTER','01012321313','3');


=========================================================
10. 학생테이블 중 전화번호에 131 을 포함하고 있는 자료를
   삭제하세요.

==>

delete from student where phone like '%131%';

=========================================================
11. 학생테이블의 id가 20080104 인 학생의 이름을 '장원영'으로 
바꾸세요

==>

update student set name = '장원영'
where s_id = '20080104';



=========================================================
12. 학생테이블의 이름이 '부우'인 친구의 belong을 DANCE,
               전화번호를 010-7777-7777로 바꿉니다.

==>
update student set belong = 'DANCE', phone = '010-7777-7777'
where name = '부우';




=========================================================
13. professor 테이블명을 teacher 로 변경합니다.

==>
rename table professor to teacher; 

select *from teacher;

=========================================================

14. 학생테이블에 소속별 몇명씩 있는지 출력하세요.

==>
 select belong as Belong, count(*) as Count from student
 group by belong;



=========================================================
15. belong이 Dance 또는 Music 또는 sports 인 학생들의 status 의 합계, 평균을 구하고,
    합계가 2 초과인 자료에 대하여, 합계에 대한 내림차순으로 정렬해서 출력하세요..

+-------+------+--------+
| 소속  | 합계 | 평균   |
+-------+------+--------+
| DANCE |   11 | 2.2000 |
| MUSIC |    6 | 3.0000 |
+-------+------+--------+


==>

select belong as 소속, sum(status) as 합, avg(status) as 평균 
from student 
where belong in ('dance','music','sports') 
group by belong 
having 합 >2 
order by 합 desc;



mysql> select belong as 소속, sum(status) as 합, avg(status) as 평균 
from student 
where belong in ('dance','music','sports') 
group by belong 
having 합 >2 
order by 합 desc;
+--------+------+--------+
| 소속   | 합   | 평균   |
+--------+------+--------+
| DANCE  |   12 | 2.0000 |
| MUSIC  |    6 | 3.0000 |
+--------+------+--------+
2 rows in set (0.00 sec)


=========================================================




